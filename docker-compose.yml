version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ruh_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ruh-backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./ruh-backend
    container_name: ruh_backend
    ports:
      - "5000:5000"
    depends_on:
      - db
      - qdrant
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/ruh_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      FLASK_ENV: development
      FLASK_DEBUG: true
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
    volumes:
      - ./ruh-backend:/app
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting application...' &&
        python run.py"

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_db
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  embedding-db:
    image: python:3.9-slim
    container_name: embedding_db
    depends_on:
      - qdrant
    environment:
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
    volumes:
      - ./ruh-embedding-db:/app
    working_dir: /app
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        pip install sentence-transformers numpy qdrant-client &&
        echo 'Running setup script to seed Qdrant...' &&
        python setup.py"

volumes:
  postgres_data:
  qdrant_storage: